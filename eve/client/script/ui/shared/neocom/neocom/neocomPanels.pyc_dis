#Embedded file name: c:/depot/games/branches/release/EVE-TRANQUILITY/eve/client/script/ui/shared/neocom/neocom/neocomPanels.py
import uicls
import uiconst
import util
import uthread
import neocom
import form
import localization
import blue
import trinity
from math import pi
COLOR_PANEL_BG = (0.0, 0.0, 0.0, 0.85)

class PanelBase(uicls.Container):
    __guid__ = 'neocom.PanelBase'
    default_state = uiconst.UI_NORMAL
    default_align = uiconst.TOPLEFT

    def ApplyAttributes(self, attributes):
        uicls.Container.ApplyAttributes(self, attributes)
        self.btnData = attributes.btnData
        self.ConstructLayout()

    def ConstructLayout(self):
        self.main = uicls.Container(parent=self, align=uiconst.TOALL)
        uicls.Fill(parent=self, color=self.GetBackgroundColor())

    def EntryAnimation(self):
        uicore.animations.FadeIn(self, duration=0.3)
        for c in self.main.children:
            c.opacity = 0.0

        sleepTime = 100.0 / len(self.main.children)
        for c in self.main.children:
            uicore.animations.FadeTo(c, 0.0, 1.0, duration=0.3)
            blue.synchro.SleepWallclock(sleepTime)

    def GetBackgroundColor(self):
        color = settings.char.windows.Get('wndColor', eve.themeColor)
        color = util.Color(*color)
        h, s, b = color.GetHSB()
        return color.SetSaturation(s * 0.5).SetBrightness(b * 0.5).SetAlpha(0.85).GetRGBA()


class PanelGroup(PanelBase):
    __guid__ = 'neocom.PanelGroup'
    default_name = 'PanelGroup'

    def ApplyAttributes(self, attributes):
        PanelBase.ApplyAttributes(self, attributes)
        btnDataList = self.GetButtonDataList()
        self.ConstructButtons(btnDataList)
        self.SetPanelHeight(btnDataList)
        self.SetPanelWidth()

    def ConstructButtons(self, btnDataList):
        if btnDataList:
            for btnData in btnDataList:
                if btnData.btnType == neocom.BTNTYPE_CMD:
                    cmdName = btnData.cmdName
                    cmd = uicore.cmd.commandMap.GetCommandByName(cmdName)
                    neocom.PanelEntryCmd(parent=self.main, func=cmd.callback, btnData=btnData)
                elif btnData.btnType in (neocom.BTNTYPE_GROUP, neocom.BTNTYPE_CHAT):
                    neocom.PanelEntryGroup(parent=self.main, btnData=btnData)
                elif btnData.btnType == neocom.BTNTYPE_CHATCHANNEL:
                    neocom.PanelEntryChatChannel(parent=self.main, btnData=btnData)
                elif btnData.btnType == neocom.BTNTYPE_WINDOW:
                    neocom.PanelEntryWindow(parent=self.main, btnData=btnData)
                elif btnData.btnType == neocom.BTNTYPE_BOOKMARKS:
                    neocom.PanelEntryBookmarks(parent=self.main, btnData=btnData)
                elif btnData.btnType == neocom.BTNTYPE_BOOKMARK:
                    neocom.PanelEntryBookmark(parent=self.main, btnData=btnData)

        else:
            neocom.PanelEntryText(parent=self.main, label=localization.GetByLabel('UI/Neocom/GroupEmpty'))

    def SetPanelHeight(self, btnDataList):
        height = 0
        for child in self.main.children:
            height += child.height

        self.height = max(height, neocom.PanelEntryBase.default_height)

    def SetPanelWidth(self):
        maxWidth = 220
        for panel in self.main.children:
            if hasattr(panel, 'GetRequiredWidth'):
                maxWidth = max(panel.GetRequiredWidth(), maxWidth)

        self.width = maxWidth

    def GetButtonDataList(self):
        return self.btnData.children


class PanelOverflow(PanelGroup):
    __guid__ = 'neocom.PanelOverflow'
    default_name = 'PanelOverflow'

    def ApplyAttributes(self, attributes):
        self.overflowButtons = attributes.overflowButtons
        PanelGroup.ApplyAttributes(self, attributes)

    def GetButtonDataList(self):
        return sm.GetService('neocom').neocom.overflowButtons


class PanelEveMenu(PanelGroup):
    __guid__ = 'neocom.PanelEveMenu'
    default_name = 'PanelEveMenu'
    default_clipChildren = True

    def ApplyAttributes(self, attributes):
        PanelGroup.ApplyAttributes(self, attributes)
        sm.ScatterEvent('OnEveMenuOpened')

    def ConstructLayout(self):
        self.topFill = uicls.Container(parent=self, name='topFill', bgColor=settings.char.windows.Get('wndColor', eve.themeColor), align=uiconst.TOTOP, height=30)
        self.topBG = uicls.Sprite(parent=self.topFill, align=uiconst.TOALL, texturePath='res:/UI/Texture/classes/Neocom/eveButtonBg.png', blendMode=trinity.TR2_SBM_ADD)
        self.main = uicls.Container(name='main', parent=self, padTop=3)
        color = self.GetBackgroundColor()
        self.bgFill = uicls.Fill(parent=self, color=color, align=uiconst.TOTOP)
        uicls.GradientSprite(parent=self, align=uiconst.TOALL, rgbData=[(0.0, color[:3])], alphaData=[(0.0, color[3]), (0.4, 0.3), (1.0, 0.1)], rotation=-pi / 2)

    def SetPanelHeight(self, btnDataList):
        height = 0
        for child in self.main.children:
            height += child.height

        self.bgFill.height = max(height, neocom.PanelEntryBase.default_height)
        self.height = uicore.desktop.height

    def Close(self, *args):
        sm.ScatterEvent('OnEveMenuClosed')
        PanelGroup.Close(self, *args)

    def EntryAnimation(self):
        uicore.animations.MorphScalar(self.topBG, 'padRight', self.width, 0.0, duration=0.2)
        PanelGroup.EntryAnimation(self)