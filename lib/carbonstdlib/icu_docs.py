from _icu import *
from _icu import _install__doc__
_install__doc__(BreakIterator, '\nThe BreakIterator class implements methods for finding the location of\nboundaries in text.\n\nBreakIterator is an abstract base class. Instances of BreakIterator maintain\na current position and scan over text returning the index of characters\nwhere boundaries occur.\n\nLine boundary analysis determines where a text string can be broken when\nline-wrapping. The mechanism correctly handles punctuation and hyphenated\nwords.\n\nSentence boundary analysis allows selection with correct interpretation of\nperiods within numbers and abbreviations, and trailing punctuation marks\nsuch as quotation marks and parentheses.\n\nWord boundary analysis is used by search and replace functions, as well as\nwithin text editing applications that allow the user to select words with a\ndouble click. Word selection provides correct interpretation of punctuation\nmarks within and following words. Characters that are not part of a word,\nsuch as symbols or punctuation marks, have word-breaks on both sides.\n\nCharacter boundary analysis allows users to interact with characters as they\nexpect to, for example, when moving the cursor through a text\nstring. Character boundary analysis provides correct navigation of through\ncharacter strings, regardless of how the character is stored. For example,\nan accented character might be stored as a base character and a diacritical\nmark. What users consider to be a character can differ between languages.\n\nThe text boundary positions are found according to the rules described in\nUnicode Standard Annex #29, Text Boundaries, and Unicode Standard Annex #14,\nLine Breaking Properties. These are available at\nhttp://www.unicode.org/reports/tr14/ and http://www.unicode.org/reports/tr29/.\n')
_install__doc__(BreakIterator.__init__, '\nBreakIterator is abstract. Use one of the class instantiators:\ncreateWordInstance, createLineInstance, createCharacterInstance,\ncreateSentenceInstance or createTitleInstance.\n')
_install__doc__(BreakIterator.getText, '\nReturn the string over the text being analyzed.\n')
_install__doc__(BreakIterator.createLineInstance, '\nReturns an instance of a BreakIterator implementing line breaks. Line breaks\nare logically possible line breaks, actual line breaks are usually\ndetermined based on display width. LineBreak is useful for word wrapping\ntext.\n')

